# -*- coding: utf-8 -*-
"""Task.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10LQ3bdypNS-iT2Wc2RvjenBjZDCqIe91

**Install the required packages**
"""

!pip install -q openai
!pip install min-dalle -q
!pip install fpdf

""" **Import the necessary libraries**  """

import openai

"""**Set your OpenAI API key**"""

openai.api_key ="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"

"""**Define initial system message and conversation messages**"""

messages = [
    {"role": "system", "content": "You are a kind helpful assistant.Answer to my question in 1000 wordlong passage with important things."},
]

"""**Collect user input for the conversation**"""

message = input("User : ")
if message:
  messages.append(
    {"role": "user", "content": message},
  )
   # Generate assistant's reply using ChatGPT
  chat = openai.ChatCompletion.create(
    model="gpt-3.5-turbo", messages=messages
  )

  reply = chat.choices[0].message.content
  print(f"ChatGPT: {reply}")
  messages.append({"role": "assistant", "content": reply})

"""**Generate an image related to the user's input using MinDalle**"""

from min_dalle import MinDalle

model = MinDalle(is_mega=True, is_reusable=True)

"""**Display the generated image**"""

text="generate a image that is related to "+message
#generate an image related to the user's input using MinDalle
image = model.generate_image(
    text,
    seed=-1,
    grid_size=2,
    is_seamless=False,
    temperature=1,
    top_k=256,
    supercondition_factor=32,
    is_verbose=False
)

display(image)

"""**Save the generated image**"""

from PIL import Image

# Assuming 'image' is your PIL.Image.Image object
image.save("output_image.png", format="PNG")

"""**Genetate PDF**

The user's input message is converted to uppercase. A new PDF document is created using the FPDF library. A page is added to the PDF, and the title (uppercase message) is set in the header. The content of the assistant's reply is added to the PDF, and additional spacing is applied. The generated PNG image is inserted after the text passage, and the PDF document is saved as "AI_Generated_pdf.pdf".
"""

# Convert the user's message to uppercase
uppercase_message = message.upper()

from fpdf import FPDF

# Create a new FPDF instance
pdf = FPDF()

# Add a page to the PDF document
pdf.add_page()

# Set font for the title in the header
pdf.set_font("times", 'B', 16)  # Bold font size 16
pdf.cell(0, 10, txt = uppercase_message, ln = True, align = 'C')

# Set font for the content
pdf.set_font("Times", size = 12)

# Add assistant's reply to the PDF
pdf.multi_cell(0, 10, txt = reply)

# Increase the y-coordinate by 10 units
pdf.set_y(pdf.get_y() + 10)  # Increase the y-coordinate by 10 units

# Insert the PNG image after the text passage at the end
image_path = "/content/output_image.png"  # Provide the path to your PNG image
pdf.image(image_path, x = 10, y = 10, w = 190)

# save the PDF document
pdf.output("AI_Generated_pdf.pdf")

